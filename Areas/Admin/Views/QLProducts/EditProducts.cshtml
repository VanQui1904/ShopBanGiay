@model ShoeStoreProject.Areas.Admin.Data.ProductsViewModel
@{
    ViewBag.Title = "Edit Product";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}

<div class="container mt-5">
    <div class="card">
        <div class="card-header">
            <h2 class="text-primary">Edit Product</h2>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("EditProducts", "QLProducts", FormMethod.Post, new { @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group" style="display:none;">
                    @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    <label>Product Name</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.proName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.proName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    <label>Product Image</label>
                    <div class="col-md-10">
                        <input type="file" name="fileUpload" class="form-control-file" />
                        <img src="~/Image/@Model.proImage" alt="@Model.proName" class="img-thumbnail mt-2" style="max-width: 150px;" />
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    <label>Brand Name</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.BrandID, (SelectList)ViewBag.BrandID, "Select Brand", new { @class = "form-control", required = "required" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    <label>Category Name</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.CategoryID, (SelectList)ViewBag.CategoryID, "Select Category", new { @class = "form-control", required = "required" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-flex flex-row-reverse mt-4">
                    @Html.ActionLink("Back to List", "Products", "QLProducts", new { @class = "btn btn-outline-danger btn-sm ml-2" })
                    <input type="submit" value="Save" class="btn btn-primary btn-sm" />
                </div>
            }
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
