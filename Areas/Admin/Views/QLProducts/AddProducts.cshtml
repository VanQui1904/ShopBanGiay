@model ShoeStoreProject.Areas.Admin.Data.ProductsViewModel

@{
    ViewBag.Title = "Add Products";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}

<div class="container mt-5">
    <div class="card">
        <div class="card-header">
            <h2 class="text-primary">Add Product</h2>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("AddProducts", "QLProducts", FormMethod.Post, new { @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group mt-3 mb-3">
                    <label>Product Name</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.proName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.proName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3 ">
                    <label>Product Image</label>
                    <div class="col-md-10">
                        <input type="file" name="fileUpload" class="form-control-file" />
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    <label>Brand Name</label>
                    <div class="col-md-10">
                        @Html.DropDownList("BrandID", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    <label>Category Name</label>
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryID", null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group mt-3 mb-3">
                    @Html.LabelFor(model => model.proDescription, htmlAttributes: new { @class = "control-label col-md-2 mb-1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.proDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.proDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-actions d-flex justify-content-end mt-3">
                    @Html.ActionLink("Cancel", "Products", "QLProducts", new { @class = "btn btn-outline-danger btn-sm" })
                    <input type="submit" value="Create" class="btn btn-primary btn-sm ml-2" />
                </div>
            }
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
